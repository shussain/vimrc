" vimrc for when all plugins are installed

filetype off                   " Required!

" It is assumed that we have vim-plug installed
" REQUIRED FOR LOADING PLUGINS!

" Vim plug
call plug#begin()
    Plug 'shussain/vim-matchit'
    Plug 'mhinz/vim-startify'
    Plug 'bling/vim-airline'
    Plug 'godlygeek/tabular'
    Plug 'ctrlpvim/ctrlp.vim'
    Plug 'airblade/vim-gitgutter'
    Plug 'tpope/vim-fugitive'
    Plug 'majutsushi/tagbar'
    Plug 'ludovicchabant/vim-gutentags'
    Plug 'xuhdev/vim-latex-live-preview'
    Plug 'junegunn/goyo.vim'
    Plug 'scrooloose/nerdtree'
    Plug 'mbbill/undotree'
    Plug 'jamessan/vim-gnupg'
    Plug 'flazz/vim-colorschemes'
    Plug 'gko/vim-coloresque'
    Plug 'tpope/vim-speeddating'
    Plug 'tpope/vim-commentary'
    Plug 'tpope/vim-dadbod'
    Plug 'vim-scripts/a.vim'
    Plug 'terryma/vim-multiple-cursors'
    Plug 'rodjek/vim-puppet'
    Plug 's3rvac/vim-syntax-redminewiki'
    Plug 'scrooloose/syntastic'
    Plug 'dense-analysis/ale'
    Plug 'benmills/vimux'
    Plug 'joshukraine/dragvisuals'
    Plug 'severin-lemaignan/vim-minimap'
    Plug 'subnut/nvim-ghost.nvim'
    Plug 'dracula/vim'
call plug#end()

" NerdTree app
:nmap <Leader>n <Esc>:NERDTree $HOME/project
let NERDTreeIgnore=['.vim$', '\~$', '.*\.pyc$']

" Remap for Undotree
nmap  <F3>   :UndotreeToggle<CR>

" Remap for Tagbar
nmap  <F4>   :TagbarToggle<CR>

" Remap for Goyo
nmap  <F5>   :Goyo<CR>

" Remap for vim-latex-live-preview
nmap  <F7>   <Esc>:LLPStartPreview<CR>

" ctrl-p
let g:ctrlp_map = ',p'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_follow_symlinks = '1'
let g:ctrlp_switch_buffer = 'O'
set wildignore+=*/tmp/*,*.so,*.swp,*.pyc

nnoremap <Leader>b <Esc>:CtrlPBuffer<CR>

" Vimux
map <Leader>vp :VimuxPromptCommand<CR>
map <Leader>vm :VimuxPromptCommand("make ")<CR>
map <Leader>vl :VimuxRunLastCommand<CR>

" Drag visual configuration
runtime plugin/dragvisuals.vim
vmap <expr> h DVB_Drag('left')
vmap <expr> l DVB_Drag('right')
vmap <expr> j DVB_Drag('down')
vmap <expr> k DVB_Drag('up')
vmap <expr> D DVB_Duplicate()

" Syntastic configuration
set statusline+=%#errormsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1
let g:syntastic_puppet_checkers=['puppet-lint']
let g:syntastic_yaml_checkers = ['yamllint']
let g:syntastic_quiet_messages = { "level": "warnings" }

" ALE configuration
let g:ale_enabled = 0
let g:airline#extensions#ale#enabled = 1	" Set Airline will handle the rest.

" Conque-GDB configuration
let g:ConqueTerm_Color = 0         " No terminal color
let g:ConqueTerm_CloseOnEnd = 1    " close Conque when program ends running
let g:ConqueTerm_StartMessages = 0 " display warning messages if ConqueTerm is configured incorrectly
let g:ConqueGdb_Leader = ';'

" Specify colour scheme
colorscheme dracula
